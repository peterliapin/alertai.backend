// <auto-generated />
using System;
using Suggestio.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Suggestio.Api.Data.Migrations
{
    [DbContext(typeof(SuggestioDbContext))]
    partial class SuggestioDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Suggestio.Api.Data.Entities.Idea", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<Guid>("ScheduleId")
                        .HasColumnType("uuid")
                        .HasColumnName("schedule_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<Guid>("TopicId")
                        .HasColumnType("uuid")
                        .HasColumnName("topic_id");

                    b.HasKey("Id")
                        .HasName("pk_ideas");

                    b.HasIndex("ScheduleId")
                        .HasDatabaseName("ix_ideas_schedule_id");

                    b.HasIndex("TopicId")
                        .HasDatabaseName("ix_ideas_topic_id");

                    b.ToTable("ideas", (string)null);
                });

            modelBuilder.Entity("Suggestio.Api.Data.Entities.Schedule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Ical")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ical");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("boolean")
                        .HasColumnName("is_enabled");

                    b.Property<bool>("OnDemand")
                        .HasColumnType("boolean")
                        .HasColumnName("on_demand");

                    b.Property<Guid>("TopicId")
                        .HasColumnType("uuid")
                        .HasColumnName("topic_id");

                    b.HasKey("Id")
                        .HasName("pk_schedules");

                    b.HasIndex("TopicId")
                        .HasDatabaseName("ix_schedules_topic_id");

                    b.ToTable("schedules", (string)null);
                });

            modelBuilder.Entity("Suggestio.Api.Data.Entities.Topic", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Context")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("context");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_topics");

                    b.ToTable("topics", (string)null);
                });

            modelBuilder.Entity("Suggestio.Api.Data.Entities.Idea", b =>
                {
                    b.HasOne("Suggestio.Api.Data.Entities.Schedule", "Schedule")
                        .WithMany()
                        .HasForeignKey("ScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_ideas_schedules_schedule_id");

                    b.HasOne("Suggestio.Api.Data.Entities.Topic", "Topic")
                        .WithMany()
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_ideas_topics_topic_id");

                    b.Navigation("Schedule");

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("Suggestio.Api.Data.Entities.Schedule", b =>
                {
                    b.HasOne("Suggestio.Api.Data.Entities.Topic", "Topic")
                        .WithMany()
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_schedules_topics_topic_id");

                    b.Navigation("Topic");
                });
#pragma warning restore 612, 618
        }
    }
}
